services:
  planka:
    build:
      context: .
      dockerfile: Dockerfile
    image: planka-producao-desenvolvimento
    pull_policy: never
    restart: on-failure
    volumes:
      - favicons:/app/public/favicons
      - user-avatars:/app/public/user-avatars
      - background-images:/app/public/background-images
      - attachments:/app/private/attachments
    ports:
      - 3000:1337
    environment:
      - BASE_URL=http://localhost:3000
      - DATABASE_URL=postgresql://postgres@postgres/planka
      - SECRET_KEY=notsecretkey
      - ADMIN_EMAIL=admin@example.com
      - ADMIN_PASSWORD=admin123
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Aguardando PostgreSQL...' &&
        sleep 10 &&
        echo 'Inicializando base de dados...' &&
        npm run db:init &&
        echo 'Verificando utilizador admin...' &&
        (echo 'admin@example.com' | npm run db:create-admin-user || echo 'Admin j√° existe ou erro ignorado') &&
        echo 'Iniciando Planka...' &&
        npm run start:prod
      "

  postgres:
    image: postgres:15-alpine
    restart: on-failure
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=planka
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  favicons:
  user-avatars:
  background-images:
  attachments:
  postgres:
